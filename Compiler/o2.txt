*Compiling ../../Code/test_pattern.sref:
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: 
Annihilate and take fixed data
from left of size0 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdTakeFixed AlgLeft 0 0 )(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkCloseBracket 1 )
brackets left
0 
Annihilate and take fixed data
from left of size1 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdTakeFixed AlgLeft 0 1 (TkBrackets 0 1 (LeftPtr 1 0 )(RightPtr 1 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkCloseBracket 1 )(TkOpenBracket 2 )(TkCloseBracket 2 )(TkOpenBracket 3 )(TkCloseBracket 3 )
brackets left
0 
brackets left
1 
brackets left
2 
Annihilate and take fixed data
from left of size3 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdBrackets AlgLeft 0 3 )(CmdTakeFixed AlgLeft 0 3 (TkBrackets 0 1 (LeftPtr 1 0 )(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(RightPtr 2 0 ))(TkBrackets 0 3 (LeftPtr 3 0 )(RightPtr 3 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkChar A)
next char left
Annihilate and take fixed data
from left of size1 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdTakeFixed AlgLeft 0 1 (TkChar A))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkChar A)(TkChar B)(TkChar C)
next char left
next char left
next char left
Annihilate and take fixed data
from left of size3 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdTakeFixed AlgLeft 0 3 (TkChar A)(TkChar B)(TkChar C))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkChar A)(TkChar B)(TkChar C)(TkOpenBracket 1 )(TkCloseBracket 1 )(TkChar D)(TkChar E)(TkChar F)
next char left
next char left
next char left
next char right
next char right
next char right
brackets left
3 
Annihilate and take fixed data
from left of size4 
from right of size3 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdNumber AlgRight 0 F)(CmdNumber AlgRight 0 E)(CmdNumber AlgRight 0 D)(CmdBrackets AlgLeft 0 1 )(CmdTakeFixed AlgLeft 0 4 (TkChar A)(TkChar B)(TkChar C)(TkBrackets 0 1 (LeftPtr 1 0 )(RightPtr 1 0 )))(CmdTakeFixed AlgRight 0 3 (TkChar F)(TkChar E)(TkChar D))
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkChar A)(TkChar B)(TkChar C)(TkOpenBracket 1 )(TkChar I)(TkChar J)(TkChar K)(TkCloseBracket 1 )(TkChar D)(TkChar E)(TkChar F)
next char left
next char left
next char left
next char right
next char right
next char right
brackets left
3 
Annihilate and take fixed data
from left of size4 
from right of size3 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdNumber AlgRight 0 F)(CmdNumber AlgRight 0 E)(CmdNumber AlgRight 0 D)(CmdBrackets AlgLeft 0 1 )(CmdTakeFixed AlgLeft 0 4 (TkChar A)(TkChar B)(TkChar C)(TkBrackets 0 1 (LeftPtr 1 0 )(TkChar I)(TkChar J)(TkChar K)(RightPtr 1 0 )))(CmdTakeFixed AlgRight 0 3 (TkChar F)(TkChar E)(TkChar D))
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkNumber 123 )(TkChar a)(TkChar b)(TkChar c)(TkNumber 456 )
next number left
next char left
next char left
next char left
next number left
Annihilate and take fixed data
from left of size5 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdTakeFixed AlgLeft 0 5 (TkNumber 123 )(TkChar a)(TkChar b)(TkChar c)(TkNumber 456 ))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable s1)
s-variable on left
Annihilate and take fixed data
from left of size1 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 s1)

Commands after GenPattern:
(CmdVar AlgLeft 0 s1)(CmdTakeFixed AlgLeft 0 1 (TkVariable s1))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable s1)(TkVariable s1)
s-variable on left
repeated st-variable on left
Annihilate and take fixed data
from left of size2 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(2 s1)

Commands after GenPattern:
(CmdVar AlgLeft 0 s1)(CmdRepeated AlgLeft 0 2 s1)(CmdTakeFixed AlgLeft 0 2 (TkVariable s1)(TkVariable s1))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkChar A)(TkVariable smiddle)(TkChar B)
next char left
next char right
s-variable on left
Annihilate and take fixed data
from left of size2 
from right of size1 

Pattern after GenPattern:


Vars after GenPattern:
(1 smiddle)

Commands after GenPattern:
(CmdNumber AlgRight 0 B)(CmdVar AlgLeft 0 smiddle)(CmdTakeFixed AlgLeft 0 2 (TkChar A)(TkVariable smiddle))(CmdTakeFixed AlgRight 0 1 (TkChar B))
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sleft)(TkChar A)(TkVariable sright)
s-variable on left
next char left
s-variable on left
Annihilate and take fixed data
from left of size3 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sleft)(1 sright)

Commands after GenPattern:
(CmdVar AlgLeft 0 sleft)(CmdVar AlgLeft 0 sright)(CmdTakeFixed AlgLeft 0 3 (TkVariable sleft)(TkChar A)(TkVariable sright))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sleft)(TkVariable smiddle)(TkVariable sright)
s-variable on left
s-variable on left
s-variable on left
Annihilate and take fixed data
from left of size3 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sleft)(1 smiddle)(1 sright)

Commands after GenPattern:
(CmdVar AlgLeft 0 sleft)(CmdVar AlgLeft 0 smiddle)(CmdVar AlgLeft 0 sright)(CmdTakeFixed AlgLeft 0 3 (TkVariable sleft)(TkVariable smiddle)(TkVariable sright))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sleft)(TkOpenBracket 1 )(TkCloseBracket 1 )(TkVariable smiddle)(TkVariable sright)
s-variable on left
brackets left
1 
s-variable on left
s-variable on left
Annihilate and take fixed data
from left of size4 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sleft)(1 smiddle)(1 sright)

Commands after GenPattern:
(CmdVar AlgLeft 0 sleft)(CmdBrackets AlgLeft 0 1 )(CmdVar AlgLeft 0 smiddle)(CmdVar AlgLeft 0 sright)(CmdTakeFixed AlgLeft 0 4 (TkVariable sleft)(TkBrackets 0 1 (LeftPtr 1 0 )(RightPtr 1 0 ))(TkVariable smiddle)(TkVariable sright))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sleft)(TkOpenBracket 1 )(TkChar A)(TkChar B)(TkChar C)(TkCloseBracket 1 )(TkVariable sright)
s-variable on left
brackets left
1 
s-variable on left
Annihilate and take fixed data
from left of size3 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sleft)(1 sright)

Commands after GenPattern:
(CmdVar AlgLeft 0 sleft)(CmdBrackets AlgLeft 0 1 )(CmdVar AlgLeft 0 sright)(CmdTakeFixed AlgLeft 0 3 (TkVariable sleft)(TkBrackets 0 1 (LeftPtr 1 0 )(TkChar A)(TkChar B)(TkChar C)(RightPtr 1 0 ))(TkVariable sright))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sleft)(TkOpenBracket 1 )(TkVariable eMid)(TkCloseBracket 1 )(TkVariable sright)
s-variable on left
brackets left
1 
s-variable on left
Annihilate and take fixed data
from left of size3 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sleft)(1 sright)

Commands after GenPattern:
(CmdVar AlgLeft 0 sleft)(CmdBrackets AlgLeft 0 1 )(CmdVar AlgLeft 0 sright)(CmdTakeFixed AlgLeft 0 3 (TkVariable sleft)(TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eMid)(RightPtr 1 0 ))(TkVariable sright))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sleft)(TkOpenBracket 1 )(TkVariable eMid1)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable eMid2)(TkCloseBracket 2 )(TkVariable sright)
s-variable on left
brackets left
1 
brackets left
2 
s-variable on left
Annihilate and take fixed data
from left of size4 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sleft)(1 sright)

Commands after GenPattern:
(CmdVar AlgLeft 0 sleft)(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdVar AlgLeft 0 sright)(CmdTakeFixed AlgLeft 0 4 (TkVariable sleft)(TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eMid1)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable eMid2)(RightPtr 2 0 ))(TkVariable sright))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkChar A)(TkVariable tmiddle)(TkChar B)
next char left
next char right
t-variable on left
Annihilate and take fixed data
from left of size2 
from right of size1 

Pattern after GenPattern:


Vars after GenPattern:
(1 tmiddle)

Commands after GenPattern:
(CmdNumber AlgRight 0 B)(CmdVar AlgLeft 0 tmiddle)(CmdTakeFixed AlgLeft 0 2 (TkChar A)(TkVariable tmiddle))(CmdTakeFixed AlgRight 0 1 (TkChar B))
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tleft)(TkChar A)(TkVariable tright)
t-variable on left
next char left
t-variable on left
Annihilate and take fixed data
from left of size3 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 tleft)(1 tright)

Commands after GenPattern:
(CmdVar AlgLeft 0 tleft)(CmdVar AlgLeft 0 tright)(CmdTakeFixed AlgLeft 0 3 (TkVariable tleft)(TkChar A)(TkVariable tright))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tleft)(TkVariable tmiddle)(TkVariable tright)
t-variable on left
t-variable on left
t-variable on left
Annihilate and take fixed data
from left of size3 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 tleft)(1 tmiddle)(1 tright)

Commands after GenPattern:
(CmdVar AlgLeft 0 tleft)(CmdVar AlgLeft 0 tmiddle)(CmdVar AlgLeft 0 tright)(CmdTakeFixed AlgLeft 0 3 (TkVariable tleft)(TkVariable tmiddle)(TkVariable tright))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tleft)(TkOpenBracket 1 )(TkCloseBracket 1 )(TkVariable tmiddle)(TkVariable tright)
t-variable on left
brackets left
1 
t-variable on left
t-variable on left
Annihilate and take fixed data
from left of size4 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 tleft)(1 tmiddle)(1 tright)

Commands after GenPattern:
(CmdVar AlgLeft 0 tleft)(CmdBrackets AlgLeft 0 1 )(CmdVar AlgLeft 0 tmiddle)(CmdVar AlgLeft 0 tright)(CmdTakeFixed AlgLeft 0 4 (TkVariable tleft)(TkBrackets 0 1 (LeftPtr 1 0 )(RightPtr 1 0 ))(TkVariable tmiddle)(TkVariable tright))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tleft)(TkOpenBracket 1 )(TkChar A)(TkChar B)(TkChar C)(TkCloseBracket 1 )(TkVariable tright)
t-variable on left
brackets left
1 
t-variable on left
Annihilate and take fixed data
from left of size3 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 tleft)(1 tright)

Commands after GenPattern:
(CmdVar AlgLeft 0 tleft)(CmdBrackets AlgLeft 0 1 )(CmdVar AlgLeft 0 tright)(CmdTakeFixed AlgLeft 0 3 (TkVariable tleft)(TkBrackets 0 1 (LeftPtr 1 0 )(TkChar A)(TkChar B)(TkChar C)(RightPtr 1 0 ))(TkVariable tright))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tleft)(TkOpenBracket 1 )(TkVariable eMid)(TkCloseBracket 1 )(TkVariable tright)
t-variable on left
brackets left
1 
t-variable on left
Annihilate and take fixed data
from left of size3 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 tleft)(1 tright)

Commands after GenPattern:
(CmdVar AlgLeft 0 tleft)(CmdBrackets AlgLeft 0 1 )(CmdVar AlgLeft 0 tright)(CmdTakeFixed AlgLeft 0 3 (TkVariable tleft)(TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eMid)(RightPtr 1 0 ))(TkVariable tright))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tleft)(TkOpenBracket 1 )(TkVariable eMid1)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable eMid2)(TkCloseBracket 2 )(TkVariable tright)
t-variable on left
brackets left
1 
brackets left
2 
t-variable on left
Annihilate and take fixed data
from left of size4 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 tleft)(1 tright)

Commands after GenPattern:
(CmdVar AlgLeft 0 tleft)(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdVar AlgLeft 0 tright)(CmdTakeFixed AlgLeft 0 4 (TkVariable tleft)(TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eMid1)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable eMid2)(RightPtr 2 0 ))(TkVariable tright))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable s1)(TkVariable t2)(TkVariable e3)
s-variable on left
t-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable e3)

Vars after GenPattern:
(1 s1)(1 t2)(1 e3)

Commands after GenPattern:
(CmdVar AlgLeft 0 s1)(CmdVar AlgLeft 0 t2)(CmdClosedE AlgLeft 0 e3)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: 
Annihilate and take fixed data
from left of size0 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdTakeFixed AlgLeft 0 0 )(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
  ERROR at 19: Variable e.Mid not found
  ERROR at 19: Unexpected "=", expected pattern or result term
  ERROR at 28: Variable e.Mid not found
  ERROR at 28: Unexpected "=", expected pattern or result term
  ERROR at 33: Missed semicolon
*Compiling ../SRLib/LibraryEx.sref:
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sFn)(TkVariable eArgument)
s-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eArgument)

Vars after GenPattern:
(1 sFn)(1 eArgument)

Commands after GenPattern:
(CmdVar AlgLeft 0 sFn)(CmdClosedE AlgLeft 0 eArgument)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable tClosure)(TkVariable eBounded)(TkCloseBracket 1 )(TkVariable eArgument)
brackets left
0 
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eArgument)

Vars after GenPattern:
(1 eArgument)

Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdClosedE AlgLeft 0 eArgument)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFn)(TkVariable tNext)(TkVariable eTail)
t-variable on left
t-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eTail)

Vars after GenPattern:
(1 tFn)(1 tNext)(1 eTail)

Commands after GenPattern:
(CmdVar AlgLeft 0 tFn)(CmdVar AlgLeft 0 tNext)(CmdClosedE AlgLeft 0 eTail)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFn)
t-variable on left
Annihilate and take fixed data
from left of size1 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 tFn)

Commands after GenPattern:
(CmdVar AlgLeft 0 tFn)(CmdTakeFixed AlgLeft 0 1 (TkVariable tFn))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFn)(TkVariable tAcc)(TkVariable tNext)(TkVariable eTail)
t-variable on left
t-variable on left
t-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eTail)

Vars after GenPattern:
(1 tFn)(1 tAcc)(1 tNext)(1 eTail)

Commands after GenPattern:
(CmdVar AlgLeft 0 tFn)(CmdVar AlgLeft 0 tAcc)(CmdVar AlgLeft 0 tNext)(CmdClosedE AlgLeft 0 eTail)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFn)(TkVariable tAcc)
t-variable on left
t-variable on left
Annihilate and take fixed data
from left of size2 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 tFn)(1 tAcc)

Commands after GenPattern:
(CmdVar AlgLeft 0 tFn)(CmdVar AlgLeft 0 tAcc)(CmdTakeFixed AlgLeft 0 2 (TkVariable tFn)(TkVariable tAcc))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable eArgument)(TkVariable tFunction)
t-variable on right
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eArgument)

Vars after GenPattern:
(1 tFunction)(1 eArgument)

Commands after GenPattern:
(CmdVar AlgRight 0 tFunction)(CmdClosedE AlgLeft 0 eArgument)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sFunc)(TkVariable eArg)
s-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eArg)

Vars after GenPattern:
(1 sFunc)(1 eArg)

Commands after GenPattern:
(CmdVar AlgLeft 0 sFunc)(CmdClosedE AlgLeft 0 eArg)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sFunc)
s-variable on left
Annihilate and take fixed data
from left of size1 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sFunc)

Commands after GenPattern:
(CmdVar AlgLeft 0 sFunc)(CmdTakeFixed AlgLeft 0 1 (TkVariable sFunc))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFn)(TkVariable tAcc)(TkVariable eTail)
t-variable on left
t-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eTail)

Vars after GenPattern:
(1 tFn)(1 tAcc)(1 eTail)

Commands after GenPattern:
(CmdVar AlgLeft 0 tFn)(CmdVar AlgLeft 0 tAcc)(CmdClosedE AlgLeft 0 eTail)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFn)(TkVariable tAcc)(TkOpenBracket 1 )(TkVariable eScanned)(TkCloseBracket 1 )(TkVariable tNext)(TkVariable eTail)
t-variable on left
t-variable on left
brackets left
2 
t-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eTail)

Vars after GenPattern:
(1 tFn)(1 tAcc)(1 tNext)(1 eTail)

Commands after GenPattern:
(CmdVar AlgLeft 0 tFn)(CmdVar AlgLeft 0 tAcc)(CmdBrackets AlgLeft 0 1 )(CmdVar AlgLeft 0 tNext)(CmdClosedE AlgLeft 0 eTail)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFn)(TkVariable tAcc)(TkOpenBracket 1 )(TkVariable eScanned)(TkCloseBracket 1 )
brackets right
0 
t-variable on left
t-variable on left
Annihilate and take fixed data
from left of size2 
from right of size1 

Pattern after GenPattern:


Vars after GenPattern:
(1 tFn)(1 tAcc)

Commands after GenPattern:
(CmdBrackets AlgRight 0 1 )(CmdVar AlgLeft 0 tFn)(CmdVar AlgLeft 0 tAcc)(CmdTakeFixed AlgLeft 0 2 (TkVariable tFn)(TkVariable tAcc))(CmdTakeFixed AlgRight 0 1 0 1 (TkBrackets (LeftPtr 1 0 )(TkVariable eScanned)(RightPtr 1 0 )))
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tAcc)(TkVariable eStepScanned)(TkOpenBracket 1 )(TkVariable eScanned)(TkCloseBracket 1 )
brackets right
0 
t-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eStepScanned)

Vars after GenPattern:
(1 tAcc)(1 eStepScanned)

Commands after GenPattern:
(CmdBrackets AlgRight 0 1 )(CmdVar AlgLeft 0 tAcc)(CmdClosedE AlgLeft 0 eStepScanned)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eExpr)(TkCloseBracket 1 )
brackets left
0 
Annihilate and take fixed data
from left of size1 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdTakeFixed AlgLeft 0 1 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eExpr)(RightPtr 1 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tAcc)(TkVariable eTail)
t-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eTail)

Vars after GenPattern:
(1 tAcc)(1 eTail)

Commands after GenPattern:
(CmdVar AlgLeft 0 tAcc)(CmdClosedE AlgLeft 0 eTail)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable eFileName)
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eFileName)

Vars after GenPattern:
(1 eFileName)

Commands after GenPattern:
(CmdClosedE AlgLeft 0 eFileName)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFile)(TkNumber 0 )
next number right
t-variable on left
Annihilate and take fixed data
from left of size1 
from right of size1 

Pattern after GenPattern:


Vars after GenPattern:
(1 tFile)

Commands after GenPattern:
(CmdNumber AlgRight 0 0 )(CmdVar AlgLeft 0 tFile)(CmdTakeFixed AlgLeft 0 1 (TkVariable tFile))(CmdTakeFixed AlgRight 0 1 (TkNumber 0 ))
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFile)(TkVariable eLine)(TkNumber 0 )
next number right
t-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eLine)

Vars after GenPattern:
(1 tFile)(1 eLine)

Commands after GenPattern:
(CmdNumber AlgRight 0 0 )(CmdVar AlgLeft 0 tFile)(CmdClosedE AlgLeft 0 eLine)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFile)(TkVariable eLine)
t-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eLine)

Vars after GenPattern:
(1 tFile)(1 eLine)

Commands after GenPattern:
(CmdVar AlgLeft 0 tFile)(CmdClosedE AlgLeft 0 eLine)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eFileName)(TkCloseBracket 1 )(TkVariable eLines)
brackets left
0 
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eLines)

Vars after GenPattern:
(1 eLines)

Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdClosedE AlgLeft 0 eLines)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFile)(TkOpenBracket 1 )(TkVariable eLine)(TkCloseBracket 1 )
brackets right
0 
t-variable on left
Annihilate and take fixed data
from left of size1 
from right of size1 

Pattern after GenPattern:


Vars after GenPattern:
(1 tFile)

Commands after GenPattern:
(CmdBrackets AlgRight 0 1 )(CmdVar AlgLeft 0 tFile)(CmdTakeFixed AlgLeft 0 1 (TkVariable tFile))(CmdTakeFixed AlgRight 0 1 0 1 (TkBrackets (LeftPtr 1 0 )(TkVariable eLine)(RightPtr 1 0 )))
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sNum)
s-variable on left
Annihilate and take fixed data
from left of size1 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sNum)

Commands after GenPattern:
(CmdVar AlgLeft 0 sNum)(CmdTakeFixed AlgLeft 0 1 (TkVariable sNum))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sNum)
s-variable on left
Annihilate and take fixed data
from left of size1 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sNum)

Commands after GenPattern:
(CmdVar AlgLeft 0 sNum)(CmdTakeFixed AlgLeft 0 1 (TkVariable sNum))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkName Success)(TkVariable sNumber)
next name left
s-variable on left
Annihilate and take fixed data
from left of size2 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sNumber)

Commands after GenPattern:
(CmdVar AlgLeft 0 sNumber)(CmdTakeFixed AlgLeft 0 2 (TkName Success)(TkVariable sNumber))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable eDigits)
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eDigits)

Vars after GenPattern:
(1 eDigits)

Commands after GenPattern:
(CmdClosedE AlgLeft 0 eDigits)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: 
Annihilate and take fixed data
from left of size0 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdTakeFixed AlgLeft 0 0 )(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sNext)
s-variable on left
Annihilate and take fixed data
from left of size1 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sNext)

Commands after GenPattern:
(CmdVar AlgLeft 0 sNext)(CmdTakeFixed AlgLeft 0 1 (TkVariable sNext))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sNext)
s-variable on left
Annihilate and take fixed data
from left of size1 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sNext)

Commands after GenPattern:
(CmdVar AlgLeft 0 sNext)(CmdTakeFixed AlgLeft 0 1 (TkVariable sNext))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sNext)(TkVariable eArg)
s-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eArg)

Vars after GenPattern:
(1 sNext)(1 eArg)

Commands after GenPattern:
(CmdVar AlgLeft 0 sNext)(CmdClosedE AlgLeft 0 eArg)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable eRight)(TkCloseBracket 2 )
brackets left
0 
brackets left
1 
Annihilate and take fixed data
from left of size2 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdTakeFixed AlgLeft 0 2 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable eRight)(RightPtr 2 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eLeft)(TkCloseBracket 1 )(TkVariable sRight)
brackets left
0 
s-variable on left
Annihilate and take fixed data
from left of size2 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sRight)

Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdVar AlgLeft 0 sRight)(CmdTakeFixed AlgLeft 0 2 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eLeft)(RightPtr 1 0 ))(TkVariable sRight))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sLeft)(TkOpenBracket 1 )(TkVariable eRight)(TkCloseBracket 1 )
brackets right
0 
s-variable on left
Annihilate and take fixed data
from left of size1 
from right of size1 

Pattern after GenPattern:


Vars after GenPattern:
(1 sLeft)

Commands after GenPattern:
(CmdBrackets AlgRight 0 1 )(CmdVar AlgLeft 0 sLeft)(CmdTakeFixed AlgLeft 0 1 (TkVariable sLeft))(CmdTakeFixed AlgRight 0 1 0 1 (TkBrackets (LeftPtr 1 0 )(TkVariable eRight)(RightPtr 1 0 )))
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sLeft)(TkVariable sRight)
s-variable on left
s-variable on left
Annihilate and take fixed data
from left of size2 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sLeft)(1 sRight)

Commands after GenPattern:
(CmdVar AlgLeft 0 sLeft)(CmdVar AlgLeft 0 sRight)(CmdTakeFixed AlgLeft 0 2 (TkVariable sLeft)(TkVariable sRight))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable tFirstLeft)(TkVariable eLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable tFirstRight)(TkVariable eRight)(TkCloseBracket 2 )
brackets left
0 
brackets left
1 
Annihilate and take fixed data
from left of size2 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdTakeFixed AlgLeft 0 2 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable tFirstLeft)(TkVariable eLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable tFirstRight)(TkVariable eRight)(RightPtr 2 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkCloseBracket 1 )(TkOpenBracket 2 )(TkCloseBracket 2 )
brackets left
0 
brackets left
1 
Annihilate and take fixed data
from left of size2 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdTakeFixed AlgLeft 0 2 (TkBrackets 0 1 (LeftPtr 1 0 )(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(RightPtr 2 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable eRight)(TkCloseBracket 2 )
brackets left
0 
brackets left
1 
Annihilate and take fixed data
from left of size2 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdTakeFixed AlgLeft 0 2 (TkBrackets 0 1 (LeftPtr 1 0 )(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable eRight)(RightPtr 2 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkCloseBracket 2 )
brackets left
0 
brackets left
1 
Annihilate and take fixed data
from left of size2 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdTakeFixed AlgLeft 0 2 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(RightPtr 2 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkChar <)(TkOpenBracket 1 )(TkVariable eLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable eRight)(TkCloseBracket 2 )
next char left
brackets left
1 
brackets left
2 
Annihilate and take fixed data
from left of size3 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdTakeFixed AlgLeft 0 3 (TkChar <)(TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable eRight)(RightPtr 2 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkChar =)(TkOpenBracket 1 )(TkVariable eLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable eRight)(TkCloseBracket 2 )
next char left
brackets left
1 
brackets left
2 
Annihilate and take fixed data
from left of size3 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdTakeFixed AlgLeft 0 3 (TkChar =)(TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable eRight)(RightPtr 2 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkChar >)(TkOpenBracket 1 )(TkVariable eLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable eRight)(TkCloseBracket 2 )
next char left
brackets left
1 
brackets left
2 
Annihilate and take fixed data
from left of size3 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdTakeFixed AlgLeft 0 3 (TkChar >)(TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable eRight)(RightPtr 2 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable eRight)(TkCloseBracket 2 )
brackets left
0 
brackets left
1 
Annihilate and take fixed data
from left of size2 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdTakeFixed AlgLeft 0 2 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable eRight)(RightPtr 2 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eLeft)(TkCloseBracket 1 )(TkVariable sRight)
brackets left
0 
s-variable on left
Annihilate and take fixed data
from left of size2 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sRight)

Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdVar AlgLeft 0 sRight)(CmdTakeFixed AlgLeft 0 2 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eLeft)(RightPtr 1 0 ))(TkVariable sRight))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sLeft)(TkOpenBracket 1 )(TkVariable eRight)(TkCloseBracket 1 )
brackets right
0 
s-variable on left
Annihilate and take fixed data
from left of size1 
from right of size1 

Pattern after GenPattern:


Vars after GenPattern:
(1 sLeft)

Commands after GenPattern:
(CmdBrackets AlgRight 0 1 )(CmdVar AlgLeft 0 sLeft)(CmdTakeFixed AlgLeft 0 1 (TkVariable sLeft))(CmdTakeFixed AlgRight 0 1 0 1 (TkBrackets (LeftPtr 1 0 )(TkVariable eRight)(RightPtr 1 0 )))
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sLeft)(TkVariable sRight)
s-variable on left
s-variable on left
Annihilate and take fixed data
from left of size2 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sLeft)(1 sRight)

Commands after GenPattern:
(CmdVar AlgLeft 0 sLeft)(CmdVar AlgLeft 0 sRight)(CmdTakeFixed AlgLeft 0 2 (TkVariable sLeft)(TkVariable sRight))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eScannedLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable tFirstLeft)(TkVariable eLeft)(TkCloseBracket 2 )(TkOpenBracket 3 )(TkVariable eScannedRight)(TkCloseBracket 3 )(TkOpenBracket 4 )(TkVariable tFirstRight)(TkVariable eRight)(TkCloseBracket 4 )
brackets left
0 
brackets left
1 
brackets left
2 
brackets left
3 
Annihilate and take fixed data
from left of size4 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdBrackets AlgLeft 0 3 )(CmdBrackets AlgLeft 0 4 )(CmdTakeFixed AlgLeft 0 4 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eScannedLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable tFirstLeft)(TkVariable eLeft)(RightPtr 2 0 ))(TkBrackets 0 3 (LeftPtr 3 0 )(TkVariable eScannedRight)(RightPtr 3 0 ))(TkBrackets 0 4 (LeftPtr 4 0 )(TkVariable tFirstRight)(TkVariable eRight)(RightPtr 4 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eScannedLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkCloseBracket 2 )(TkOpenBracket 3 )(TkVariable eScannedRight)(TkCloseBracket 3 )(TkOpenBracket 4 )(TkCloseBracket 4 )
brackets left
0 
brackets left
1 
brackets left
2 
brackets left
3 
Annihilate and take fixed data
from left of size4 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdBrackets AlgLeft 0 3 )(CmdBrackets AlgLeft 0 4 )(CmdTakeFixed AlgLeft 0 4 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eScannedLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(RightPtr 2 0 ))(TkBrackets 0 3 (LeftPtr 3 0 )(TkVariable eScannedRight)(RightPtr 3 0 ))(TkBrackets 0 4 (LeftPtr 4 0 )(RightPtr 4 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eScannedLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkCloseBracket 2 )(TkOpenBracket 3 )(TkVariable eScannedRight)(TkCloseBracket 3 )(TkOpenBracket 4 )(TkVariable eRight)(TkCloseBracket 4 )
brackets left
0 
brackets left
1 
brackets left
2 
brackets left
3 
Annihilate and take fixed data
from left of size4 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdBrackets AlgLeft 0 3 )(CmdBrackets AlgLeft 0 4 )(CmdTakeFixed AlgLeft 0 4 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eScannedLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(RightPtr 2 0 ))(TkBrackets 0 3 (LeftPtr 3 0 )(TkVariable eScannedRight)(RightPtr 3 0 ))(TkBrackets 0 4 (LeftPtr 4 0 )(TkVariable eRight)(RightPtr 4 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eScannedLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable eLeft)(TkCloseBracket 2 )(TkOpenBracket 3 )(TkVariable eScannedRight)(TkCloseBracket 3 )(TkOpenBracket 4 )(TkCloseBracket 4 )
brackets left
0 
brackets left
1 
brackets left
2 
brackets left
3 
Annihilate and take fixed data
from left of size4 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdBrackets AlgLeft 0 3 )(CmdBrackets AlgLeft 0 4 )(CmdTakeFixed AlgLeft 0 4 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eScannedLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable eLeft)(RightPtr 2 0 ))(TkBrackets 0 3 (LeftPtr 3 0 )(TkVariable eScannedRight)(RightPtr 3 0 ))(TkBrackets 0 4 (LeftPtr 4 0 )(RightPtr 4 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eScannedLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable eScannedRight)(TkCloseBracket 2 )(TkChar <)(TkVariable tNextLeft)(TkVariable tNextRight)(TkOpenBracket 3 )(TkVariable eLeft)(TkCloseBracket 3 )(TkOpenBracket 4 )(TkVariable eRight)(TkCloseBracket 4 )
brackets left
0 
brackets left
1 
next char left
brackets right
0 
brackets right
1 
t-variable on left
t-variable on left
Annihilate and take fixed data
from left of size5 
from right of size2 

Pattern after GenPattern:


Vars after GenPattern:
(1 tNextLeft)(1 tNextRight)

Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdBrackets AlgRight 0 4 )(CmdBrackets AlgRight 0 3 )(CmdVar AlgLeft 0 tNextLeft)(CmdVar AlgLeft 0 tNextRight)(CmdTakeFixed AlgLeft 0 5 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eScannedLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable eScannedRight)(RightPtr 2 0 ))(TkChar <)(TkVariable tNextLeft)(TkVariable tNextRight))(CmdTakeFixed AlgRight 0 2 0 4 (TkBrackets (LeftPtr 4 0 )(TkVariable eRight)(RightPtr 4 0 ))0 3 (TkBrackets (LeftPtr 3 0 )(TkVariable eLeft)(RightPtr 3 0 )))
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eScannedLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable eScannedRight)(TkCloseBracket 2 )(TkChar =)(TkVariable tNextLeft)(TkVariable tNextRight)(TkOpenBracket 3 )(TkVariable eLeft)(TkCloseBracket 3 )(TkOpenBracket 4 )(TkVariable eRight)(TkCloseBracket 4 )
brackets left
0 
brackets left
1 
next char left
brackets right
0 
brackets right
1 
t-variable on left
t-variable on left
Annihilate and take fixed data
from left of size5 
from right of size2 

Pattern after GenPattern:


Vars after GenPattern:
(1 tNextLeft)(1 tNextRight)

Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdBrackets AlgRight 0 4 )(CmdBrackets AlgRight 0 3 )(CmdVar AlgLeft 0 tNextLeft)(CmdVar AlgLeft 0 tNextRight)(CmdTakeFixed AlgLeft 0 5 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eScannedLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable eScannedRight)(RightPtr 2 0 ))(TkChar =)(TkVariable tNextLeft)(TkVariable tNextRight))(CmdTakeFixed AlgRight 0 2 0 4 (TkBrackets (LeftPtr 4 0 )(TkVariable eRight)(RightPtr 4 0 ))0 3 (TkBrackets (LeftPtr 3 0 )(TkVariable eLeft)(RightPtr 3 0 )))
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eScannedLeft)(TkCloseBracket 1 )(TkOpenBracket 2 )(TkVariable eScannedRight)(TkCloseBracket 2 )(TkChar >)(TkVariable tNextLeft)(TkVariable tNextRight)(TkOpenBracket 3 )(TkVariable eLeft)(TkCloseBracket 3 )(TkOpenBracket 4 )(TkVariable eRight)(TkCloseBracket 4 )
brackets left
0 
brackets left
1 
next char left
brackets right
0 
brackets right
1 
t-variable on left
t-variable on left
Annihilate and take fixed data
from left of size5 
from right of size2 

Pattern after GenPattern:


Vars after GenPattern:
(1 tNextLeft)(1 tNextRight)

Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdBrackets AlgLeft 0 2 )(CmdBrackets AlgRight 0 4 )(CmdBrackets AlgRight 0 3 )(CmdVar AlgLeft 0 tNextLeft)(CmdVar AlgLeft 0 tNextRight)(CmdTakeFixed AlgLeft 0 5 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eScannedLeft)(RightPtr 1 0 ))(TkBrackets 0 2 (LeftPtr 2 0 )(TkVariable eScannedRight)(RightPtr 2 0 ))(TkChar >)(TkVariable tNextLeft)(TkVariable tNextRight))(CmdTakeFixed AlgRight 0 2 0 4 (TkBrackets (LeftPtr 4 0 )(TkVariable eRight)(RightPtr 4 0 ))0 3 (TkBrackets (LeftPtr 3 0 )(TkVariable eLeft)(RightPtr 3 0 )))
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eInBracket)(TkCloseBracket 1 )
brackets left
0 
Annihilate and take fixed data
from left of size1 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdTakeFixed AlgLeft 0 1 (TkBrackets 0 1 (LeftPtr 1 0 )(TkVariable eInBracket)(RightPtr 1 0 )))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sSymbol)
s-variable on left
Annihilate and take fixed data
from left of size1 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 sSymbol)

Commands after GenPattern:
(CmdVar AlgLeft 0 sSymbol)(CmdTakeFixed AlgLeft 0 1 (TkVariable sSymbol))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkOpenBracket 1 )(TkVariable eInBrackets)(TkCloseBracket 1 )(TkVariable eTail)
brackets left
0 
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eTail)

Vars after GenPattern:
(1 eTail)

Commands after GenPattern:
(CmdBrackets AlgLeft 0 1 )(CmdClosedE AlgLeft 0 eTail)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable sSymbol)(TkVariable eTail)
s-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eTail)

Vars after GenPattern:
(1 sSymbol)(1 eTail)

Commands after GenPattern:
(CmdVar AlgLeft 0 sSymbol)(CmdClosedE AlgLeft 0 eTail)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: 
Annihilate and take fixed data
from left of size0 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdTakeFixed AlgLeft 0 0 )(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkChar  )(TkVariable eLine)
next char left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eLine)

Vars after GenPattern:
(1 eLine)

Commands after GenPattern:
(CmdClosedE AlgLeft 0 eLine)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkChar 	)(TkVariable eLine)
next char left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eLine)

Vars after GenPattern:
(1 eLine)

Commands after GenPattern:
(CmdClosedE AlgLeft 0 eLine)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable eLine)
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eLine)

Vars after GenPattern:
(1 eLine)

Commands after GenPattern:
(CmdClosedE AlgLeft 0 eLine)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable eLine)(TkChar  )
next char right
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eLine)

Vars after GenPattern:
(1 eLine)

Commands after GenPattern:
(CmdNumber AlgRight 0  )(CmdClosedE AlgLeft 0 eLine)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable eLine)(TkChar 	)
next char right
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eLine)

Vars after GenPattern:
(1 eLine)

Commands after GenPattern:
(CmdNumber AlgRight 0 	)(CmdClosedE AlgLeft 0 eLine)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable eLine)
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eLine)

Vars after GenPattern:
(1 eLine)

Commands after GenPattern:
(CmdClosedE AlgLeft 0 eLine)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFunc)(TkOpenBracket 1 )(TkVariable eFuncs)(TkCloseBracket 1 )(TkVariable eArg)
t-variable on left
brackets left
1 
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eArg)

Vars after GenPattern:
(1 tFunc)(1 eArg)

Commands after GenPattern:
(CmdVar AlgLeft 0 tFunc)(CmdBrackets AlgLeft 0 1 )(CmdClosedE AlgLeft 0 eArg)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable eArg)
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eArg)

Vars after GenPattern:
(1 eArg)

Commands after GenPattern:
(CmdClosedE AlgLeft 0 eArg)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFunc)
t-variable on left
Annihilate and take fixed data
from left of size1 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:
(1 tFunc)

Commands after GenPattern:
(CmdVar AlgLeft 0 tFunc)(CmdTakeFixed AlgLeft 0 1 (TkVariable tFunc))(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: (TkVariable tFunc)(TkVariable eFuncs)
t-variable on left
closed e-variable pointers annihilation

Pattern after GenPattern:
(TkVariable eFuncs)

Vars after GenPattern:
(1 tFunc)(1 eFuncs)

Commands after GenPattern:
(CmdVar AlgLeft 0 tFunc)(CmdClosedE AlgLeft 0 eFuncs)
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
MakeAlgorithm starts.
Pattern: 
Annihilate and take fixed data
from left of size0 
from right of size0 

Pattern after GenPattern:


Vars after GenPattern:


Commands after GenPattern:
(CmdTakeFixed AlgLeft 0 0 )(CmdTakeFixed AlgRight 0 0 )
--------------------------------------------------------------------------------
+Linking ../SRLib/Library.cpp
+Linking ../SRLib/refalrts.cpp
